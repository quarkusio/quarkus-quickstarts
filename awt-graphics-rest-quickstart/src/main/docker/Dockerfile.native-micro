####
# This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode.
# It uses a micro base image, tuned for Quarkus native executables.
# It reduces the size of the resulting container image.
# Check https://quarkus.io/guides/quarkus-runtime-base-image for further information about this image.
#
# Before building the container image run:
#
# ./mvnw package -Dnative
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.native-micro -t quarkus/awt-graphics-rest-quickstart .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/awt-graphics-rest-quickstart
#
# The `quay.io/quarkus/ubi9-quarkus-micro-image:2.0` base image is based on UBI 9.
# To use UBI 8, switch to `quay.io/quarkus/quarkus-micro-image:2.0`.
#
# WARNING: Copying transitive dependencies is brittle, depends on the UBI version
# and it's subject to change on the UBI side.
#
###

FROM registry.access.redhat.com/ubi9/ubi-minimal:9.5 as nativelibs
RUN microdnf install -y freetype fontconfig expat

FROM quay.io/quarkus/ubi9-quarkus-micro-image:2.0
WORKDIR /work/
COPY --from=nativelibs \
   /lib64/libz.so.1 \
   /lib64/libstdc++.so.6 \
   /lib64/libfreetype.so.6 \
   /lib64/libgcc_s.so.1 \
   /lib64/libbz2.so.1 \
   /lib64/libpng16.so.16 \
   /lib64/libm.so.6 \
   /lib64/libexpat.so.1 \
   /lib64/libuuid.so.1 \
   /lib64/libxml2.so.2 \
   /lib64/libharfbuzz.so.0 \
   /lib64/libbrotlidec.so.1 \
   /lib64/libbrotlicommon.so.1 \
   /lib64/liblzma.so.5 \
   /lib64/libglib-2.0.so.0 \
   /lib64/libgraphite2.so.3 \
   /lib64/libpcre.so.1 \
   /lib64/
COPY --from=nativelibs \
   /usr/lib64/libfontconfig.so.1 \
   /usr/lib64/
COPY --from=nativelibs \
    /usr/share/fonts /usr/share/fonts
COPY --from=nativelibs \
    /usr/share/fontconfig /usr/share/fontconfig
COPY --from=nativelibs \
    /usr/lib/fontconfig /usr/lib/fontconfig
COPY --from=nativelibs \
     /etc/fonts /etc/fonts

RUN chown 1001 /work \
    && chmod "g+rwX" /work \
    && chown 1001:root /work
# Shared objects to be dynamically loaded at runtime as needed,
COPY target/*.properties target/*.so /work/
COPY --chown=1001:root --chmod=0755 target/*-runner /work/application

EXPOSE 8080
USER 1001

ENTRYPOINT ["./application", "-Dquarkus.http.host=0.0.0.0"]
